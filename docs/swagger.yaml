# swagger: "2.0"
openapi: 3.0.1
info:
  title: GoJobs - Nền tảng việc làm cho mọi người
  description: GoJobs API Docs
  termsOfService: http://swagger.io/terms/
  contact:
    email: trankhoa798@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  # - url: http://localhost:80/
  - url: https://gojobsvn.herokuapp.com/
tags:
  - name: WebAdminAPI
    description: Everything about WebAdmin
    externalDocs:
      description: Find out more
      url: https://gojobsvn.herokuapp.com/web
  - name: employers
    description: API for Employers
paths:
  /web:
    get:
      tags:
        - WebAdminAPI
      summary: Đi tới trang web quản lý
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"
  /web/adminLogin:
    post:
      tags:
        - WebAdminAPI
      summary: Admin đăng nhập
      operationId: loginUser
      produces:
        - application/html
      requestBody:
        description: Thông tin đăng nhập
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
      responses:
        "200":
          description: Đăng nhập thành công
        "401":
          description: Sai thông tin
  /web/forgotpassword:
    get:
      tags:
        - WebAdminAPI
      summary: Tới trang forgot password cho Admin
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"  
  /web/resetPassword:
    post:
      tags:
        - WebAdminAPI
      summary: Gửi email password mới cho admin
      requestBody:
        description: Email của admin
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
      produces:
        - application/html
      responses:
        "200":
          description: "Email đã được gửi"
        "404":
          description: "Tài khoản không tồn tại"
  /web/main:
    get:
      tags:
        - WebAdminAPI
      summary: Trang chính của Website quản lý
      security:
        - cookieAuth: []
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"  
  /web/employer:
    get:
      tags:
        - WebAdminAPI
      summary: Danh sách thông tin về Employer
      security:
        - cookieAuth: []
      requestBody:
        description: Thông tin phân trang
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pagination'
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"     
  /web/freelancer:
    get:
      tags:
        - WebAdminAPI
      summary: Danh sách thông tin về Freelancer
      security:
        - cookieAuth: []
      requestBody:
        description: Thông tin phân trang
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pagination'  
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"
  /web/receipt:
    get:
      tags:
        - WebAdminAPI
      summary: Danh sách thông tin về Receipt
      security:
        - cookieAuth: []
      requestBody:
        description: Thông tin phân trang
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paginationReceipt'
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"
  /web/receiptInfo:
    get:
      tags:
        - WebAdminAPI
      summary: Thông tin cụ thể về 1 Receipt
      security:
        - cookieAuth: []
      requestBody:
        description: Email của admin
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                _id:
                  type: string  
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"
  /web/statistic:
    get:      
      tags:
        - WebAdminAPI
      summary: Thông tin thống kê thu nhập của hệ thống
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: year
          description: Thời gian muốn kiểm tra
          type: integer
          default: 2021  
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"                                     
  /web/job:
    get:
      tags:
        - WebAdminAPI
      summary: Danh sách thông tin về Job
      security:
        - cookieAuth: []
      requestBody:
        description: Thông tin phân trang
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pagination'
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"
  /web/contract:
    get:
      tags:
        - WebAdminAPI
      summary: Danh sách thông tin về Contract
      security:
        - cookieAuth: []
      requestBody:
        description: Thông tin phân trang
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pagination'  
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"
  /web/updateEmpWallet:
    get:
      tags:
        - WebAdminAPI
      summary: Trang cập nhật số dư Wallet cho Employer
      security:
        - cookieAuth: []
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "400":
          description: "Lỗi!"
  /web/updateEmpWalletWithId:
    post:
      tags:
        - WebAdminAPI
      summary: API cập nhật số dư Wallet của Employer
      security:
        - cookieAuth: []
      requestBody:
        description: Thông tin để cập nhật số dư của Employer
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                empId:
                  type: string  
                balance:
                  type: number
                walletId:
                  type: string
                adminId:
                  type: string    
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"
  /web/updateFlcWallet:
    get:
      tags:
        - WebAdminAPI
      summary: Trang cập nhật số dư Wallet cho Freelancer
      security:
        - cookieAuth: []
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"
  /web/updateFlcWalletWithId:
    post:
      tags:
        - WebAdminAPI
      summary: API cập nhật số dư Wallet của Employer
      security:
        - cookieAuth: []
      requestBody:
        description: Thông tin để cập nhật số dư của Employer
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                flcId:
                  type: string  
                balance:
                  type: number
                walletId:
                  type: string
                adminId:
                  type: string    
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "400":
          description: "Lỗi!"
  /web/updatePassword:
    get:
      tags:
        - WebAdminAPI
      summary: Trang tự cập nhật mật khẩu cho Admin
      security:
        - cookieAuth: []
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"
  /web/updatePasswordAdmin:
    post:
      tags:
        - WebAdminAPI
      summary: Trang tự cập nhật mật khẩu cho Admin
      security:
        - cookieAuth: []
      requestBody:
        description: Thông tin để cập nhật số dư của Employer
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                password:
                  type: string  
                password1:
                  type: string      
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"                            
  /web/error:
    get:
      tags:
        - WebAdminAPI
      summary: Trang thể hiện lỗi
      produces:
        - application/html
      responses:
        "200":
          description: "Truy cập thành công"
        "404":
          description: "Trang không được tìm thấy"
  /employer/register:
    post:
      tags:
        - employers
      summary: Employer đăng ký tài khoản mới
      description: Thực hiện đăng ký từ ứng dụng
      requestBody:
        description: Created user object
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Employer'
      responses:
        "200":
          description: "Đăng ký thành công"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string 
        "409":
          description: "Tài khoản đã tồn tại"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string                
  /employer/login:
    post:
      tags:
      - employers
      summary: Employer đăng nhập ứng dụng
      description: Thực hiện đăng nhập từ ứng dụng
      requestBody:
        description: Created user object
        content:
          application/json:
            schema: 
              type: object
              properties:
                empEmail:
                  type: string
                  required: true
                empPassword:
                  type: string
                  required: true
      responses:
        "200":
          description: "Đăng nhập thành công"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: "Đăng nhập thất bại"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string              
        "404":
          description: "Tài khoản không tồn tại"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /employer/findEmployerById:
    get:
      tags:
        - employers
      summary: Tìm thông tin Employer theo _id
      operationId: findEmployerById
      parameters:
        - name: _id
          in: query
          description: '_id của Employer'
          schema:
            type: string
        - name: accessTokenDb
          in: query
          description: 'Token hiện tại'
          schema:
            type: string    
      responses:
        "200":
          description: "Tìm được người dùng"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: "Không có quyền truy cập"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: "Không có JSON Web Token"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string                           
        "404":
          description: "Tài khoản không tồn tại"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /employer/updatedEmployerInfo:
    post:
      tags: 
        - employers
      summary: Employer cập nhật thông tin cá nhân
      description: Thao tác thực hiện từ ứng dụng
      operationId: updatedEmployerInfo
      requestBody:
          description: Thông tin cần cập nhật có liên quan
          content:
            application/json:
              schema: 
                type: object
                properties:
                  accessTokenDb:
                    type: string
                    required: true
                  _id:
                    type: string
                    required: true
                  empLogo:
                    type: string
                  empName:
                    type: string
                  empPhone:
                    type: string
                  empType:
                    type: string
                  empAddress:
                    type: string
                  empDescription:
                    type: string
                  empTaxCode:
                    type: string
      responses:
          "200":
            description: "Cập nhật thành công"
            content: 
              application/json:
                schema:
                  type: object
          "401":
            description: "Không có quyền truy cập"
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          "403":
            description: "Không có JSON Web Token"
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string                           
          "404":
            description: "Tài khoản không tồn tại"
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
  /employer/updatePassword:
    put:
      tags:
        - employers
      summary: Employer tự cập nhật mật khẩu
      description: Thao tác thực hiện ở ứng dụng
      operationId: empUpdatePassword
      requestBody:
          description: Thông tin mật khẩu mới
          content:
            application/json:
              schema: 
                type: object
                properties:
                  accessTokenDb:
                    type: string
                    required: true
                  empEmail:
                    type: string
                    required: true
                  empPassword:
                    type: string
                    required: true
                  empNewPassword:
                    type: string
                    required: true
      responses:
          "200":
            description: "Cập nhật thành công"
            content: 
              application/json:
                schema:
                  type: string
          "401":
            description: "Không có quyền truy cập"
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          "403":
            description: "Không có JSON Web Token"
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string                           
          "400":
            description: "Sai thông tin"
            content: 
              application/json:
                schema:
                  type: string
  /employer/pagination:
    get:
      tags:
        - employers
      summary: Phân trang Employer
      description: Thao tác thực hiện ở ứng dụng
      operationId: empAppPagination
      parameters:
        - name: accessTokenDb
          in: query
          description: 'Token'
          schema:
            type: string
        - name: search
          in: query
          description: 'Dò tìm theo tên / email'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sắp xếp thứ tự email'
          schema:
            type: string 
        - name: pageNumber
          in: query
          description: 'Số thứ tự trang'
          schema:
            type: number
            default: 1
        - name: pageSize
          in: query
          description: 'Độ dài trang'
          schema:
            type: number
            default: 5                 
      responses:
          "200":
            description: "Cập nhật thành công"
            content: 
              application/json:
                schema:
                  type: object
          "401":
            description: "Không có quyền truy cập"
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          "403":
            description: "Không có JSON Web Token"
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string        
  /employer/updateToken:
    put:
      tags:
        - employers
      summary: Cập nhật thông tin thiết bị sử dụng
      requestBody:
        description: _id và token từ thiết bị
        content:
          application/json:
            schema:
              type: object
              properties:
                accessTokenDb:
                    type: string
                    required: true
                _id:
                  type: string
                  required: true
                empTokenDevice:
                  type: string
                  required: true
                accessTokenDb:
                  type: string
                  required: true
      responses:
          "200":
            description: "Cập nhật thành công"
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          "401":
            description: "Không có quyền truy cập"
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          "403":
            description: "Không có JSON Web Token"
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
  /freelancer/flcRegister:
    post:
      tags:
        - freelancers
      summary: Freelancer đăng ký tài khoản mới
      description: Thực hiện đăng ký từ ứng dụng
      requestBody:
        description: Created user object
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Freelancer'
      responses:
        "200":
          description: "Đăng ký thành công"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string 
        "409":
          description: "Tài khoản đã tồn tại"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /freelancer/flcLogin:
    post:
      tags:
      - freelancers
      summary: Freelancer đăng nhập ứng dụng
      description: Thực hiện đăng nhập từ ứng dụng
      requestBody:
        description: Created user object
        content:
          application/json:
            schema: 
              type: object
              properties:
                flcEmail:
                  type: string
                  required: true
                flcPassword:
                  type: string
                  required: true
      responses:
        "200":
          description: "Đăng nhập thành công"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: "Đăng nhập thất bại"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string              
        "404":
          description: "Tài khoản không tồn tại"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /freelancer/getAllFreelancer:
    get:
      tags:
        - freelancers
      summary: Lấy danh sách Freelancer đang có
      description: Danh sách Freelancer
      operationId: getAllFreelancer
      parameters:
        - name: accessTokenDb
          in: query
          description: 'Token hiện tại'
          schema:
            type: string
      responses:
        "200":
          description: "Lấy thông tin thành công"
          content: 
            application/json:
              schema:
                type: object
        "401":
          description: "Không có quyền truy cập"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: "Không có JSON Web Token"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          "404":
          description: "Freelancer đang trống"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string                        
  /freelancer/updatePassword:
    put:
      tags:
        - freelancers
      summary: Freelancer tự cập nhật passowrd từ ứng dụng
      description: Thao tác từ ứng dụng
      requestBody:
        description: Token từ thiết bị
        content:
          application/json:
            schema:
              type: object
              properties:
                accessTokenDb:
                  type: string
                  required: true
                flcEmail:
                  type: string
                  required: true
                flcPassword:
                  type: string
                  required: true
                flcNewPassowrd:
                  type: string
                  required: true
      responses:
        "200":
          description: "Cập nhật thành công"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: "Thông tin cung cấp không đúng"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: "Không có quyền truy cập"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: "Không có JSON Web Token"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string                        
        "404":
          description: "Tài khoản không tồn tại"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /freelancer/flcPaginations:
    get:
      tags:
        - freelancers
      summary: Phân trang danh sách Freelancer
      description: Phân trang Freelancer
      operationId: flcAppPagination
      parameters:
        - name: accessTokenDb
          in: query
          description: 'Token'
          schema:
            type: string
        - name: search
          in: query
          description: 'Dò tìm theo tên / email'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sắp xếp thứ tự email'
          schema:
            type: string 
        - name: pageNumber
          in: query
          description: 'Số thứ tự trang'
          schema:
            type: number
            default: 1
        - name: pageSize
          in: query
          description: 'Độ dài trang'
          schema:
            type: number
            default: 5  
      responses:
        "200":
          description: "Truy suất thành công"
          content: 
            application/json:
              schema:
                type: object
        "401":
          description: "Không có quyền truy cập"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: "Không có JSON Web Token"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /freelancer/flcUpdatedInfo:
    post:
      tags:
        - freelancers
      summary: Freelancer tự cập nhật thông tin cá nhân
      description: Thao tác cập nhật từ ứng dụng
      requestBody:
        description: Các thông tin cần cập nhật
        content:
          application/json:
            schema:
              type: object
              properties:
                accessTokenDb:
                    type: string
                    required: true
                _id:
                  type: string
                  required: true
                flcName:
                  type: string 
                flcPhone:
                  type: string
                flcBirthday:
                  type: string
                flcAvatar:
                  type: string
                flcSex:
                  type: string
                flcAddress:
                  type: string
                flcEdu:
                  type: string
                flcMajor:
                  type: string
                flcJobTitle:
                  type: string
                flcLanguages:
                  type: string
      responses:
        "200":
          description: "Cập nhật thành công"
          content: 
            application/json:
              schema:
                type: object
        "401":
          description: "Không có quyền truy cập"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: "Không có JSON Web Token"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: "Tài khoản không tồn tại"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /freelancer/flcUpdateToken:
    put:
      tags:
        - freelancers
      summary: Cập nhật Token của thiết bị đang sử dụng
      description: Thao tác từ úng dụng
      operationId: flcUpdateToken
      parameters:
        - name: accessTokenDb
          in: query
          description: 'JWToken'
          schema:
            type: string
        - name: _id
          in: query
          description: '_id của Freelancer'
          schema:
            type: string
        - name: flcTokenDevice
          in: query
          description: 'Token từ thiết bị'
          schema:
            type: string
      responses:
        "200":
          description: "Cập nhật thành công"
          content: 
            application/json:
              schema:
                type: object
        "401":
          description: "Không có quyền truy cập"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: "Không có JSON Web Token"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /freelancer/flcPaginationAll:
    get:
      tags:
        - freelancers
      summary: Phân trang danh sách Freelancer
      description: Phân trang Freelancer
      operationId: flcAppPagination
      parameters:
        - name: accessTokenDb
          in: query
          description: 'Token'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sắp xếp thứ tự email'
          schema:
            type: string 
        - name: pageNumber
          in: query
          description: 'Số thứ tự trang'
          schema:
            type: number
            default: 1
        - name: pageSize
          in: query
          description: 'Độ dài trang'
          schema:
            type: number
            default: 5  
      responses:
        "200":
          description: "Truy suất thành công"
          content: 
            application/json:
              schema:
                type: object
        "401":
          description: "Không có quyền truy cập"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: "Không có JSON Web Token"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /freelancer/flcPaginationWithAddress:
    get:
      tags:
        - freelancers
      summary: Phân trang danh sách Freelancer
      description: Phân trang Freelancer
      operationId: flcAppPagination
      parameters:
        - name: accessTokenDb
          in: query
          description: 'Token'
          schema:
            type: string
        - name: search
          in: query
          description: 'Dò tìm theo địa chỉ'
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sắp xếp thứ tự email'
          schema:
            type: string 
        - name: pageNumber
          in: query
          description: 'Số thứ tự trang'
          schema:
            type: number
            default: 1
        - name: pageSize
          in: query
          description: 'Độ dài trang'
          schema:
            type: number
            default: 5  
      responses:
        "200":
          description: "Truy suất thành công"
          content: 
            application/json:
              schema:
                type: object
        "401":
          description: "Không có quyền truy cập"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: "Không có JSON Web Token"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /freelancer/flcProfile:
    get:
      tags:
        - freelancers
      summary: Lấy thông tin cá nhân 1 Freelancer
      description: Thông tin 1 Freelancer
      operationId: flcAppPagination
      parameters:
        - name: accessTokenDb
          in: query
          description: 'Token'
          schema:
            type: string
        - name: _id
          in: query
          description: '_id của Freelancer'
          schema:
            type: string
      responses:
        "200":
          description: "Truy suất thành công"
          content: 
            application/json:
              schema:
                type: object
        "401":
          description: "Không có quyền truy cập"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: "Không có JSON Web Token"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: "Tài khoản không tồn tại"
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string                
  /users/createUser:
    post:      
      security:
        - bearerAuth: []
      tags:
        - users
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          'application/json':
            schema: 
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: "User is fully created!"
        "400":
          description: "Error occured during transactions!"
        "409":
          description: "Email existed!"
        "401":
          description: "Unauthorized!"
  /users/createNewAccessToken/{refreshToken}:
    get:
      tags:
        - users
      summary: Refresh accessToken for user
      operationId: getNewAccessToken
      parameters:
      - name: refreshToken
        in: path
        description: 'Must be a valid refresh token.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Got new accessToken
          content: object
        403:
          description: Invaid Token / no token provided!
            # application/json:
  /users/readOneByOne/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - users  
      summary: Get info of one user with provided id.
      operationId: readOneByOne
      parameters:
      - name: id
        in: path
        description: 'userId'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Got new accessToken
          content: object
        403:
          description: Invaid Token / no token provided!
            # application/json:    
  /users/readSelfOne:
    get:
      security:
        - bearerAuth: []
      tags:
        - users  
      summary: Get personal info.
      operationId: readSelf
      responses:
        200:
          description: Got new accessToken
          content: object
        403:
          description: Invaid Token / no token provided!
            # application/json: 
  /users/deleteUser/{id}:
    delete:
      security:
        - bearerAuth: []
      tags:
        - users  
      summary: Delete one user.
      operationId: deleteOne
      parameters:
      - name: id
        in: path
        description: 'userId being deleted'
        required: true
        schema:
          type: string     
      responses:
        200:
          description: Got new accessToken
          content: object
        403:
          description: Invaid Token / no token provided!
  /users/updatePassword:
    put:
      security:
        - bearerAuth: []
      tags:
        - users  
      summary: Update personal pasword.
      operationId: personalPasswordUpdate
      requestBody:
        required: true
        description: Created user object
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string    
                password:
                  type: string
                newPassword:
                  type: string
      responses:
        200:
          description: User deleted.
          content: object
        403:
          description: Invaid Token / no token provided!
  /users/forgot:
    post:
      tags:
        - users
      summary: Send forgot password email.
      operationId: forgotPassword
      requestBody:
        required: true
        description: Forget
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        200:
          description: Email sent.
          content: object
        404:
          description: User not found.
          content: object
  /users/reset:
    put:
      tags:
        - users
      summary: Reset password from email.
      operationId: resetPassword
      requestBody:
        required: true
        description: Forget
        content:
          'application/json':
            schema:
              type: object
              properties:
                id:
                  type: string
                token:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Password reset.
          content: object
  /users/pagination:
    get:
      security:
        - bearerAuth: []
      tags:
        - users
      summary: Pagination.
      operationId: userPagination
      parameters:
        - name: pageNumber
          in: query
          description: 'Current page.'
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Size of a page.'
          schema:
            type: string
        - name: search
          in: query
          description: 'Search values.'
          schema:
            type: string    
        - name: isSortedByFirsttName
          in: query
          description: 'Sorted by first name.'
          schema:
            type: boolean
        - name: filter
          in: query
          description: 'Filter by status'
          schema:
            type: array
            items:
              type: string
              default: Active
              enum:
              - Active 
              - Inactive      
      responses:
        200:
          description: Show data.
          content: object
  /users/updateFullProfile:
    put:
      security:
          - bearerAuth: []
      tags:
        - users
      summary: Update specific info of one user.
      operationId: updateFullProfile
      requestBody:
        required: true
        description: New user info.
        content:
          'application/json':
            schema: 
              $ref: '#/components/schemas/UserWitdId'
      responses:
        200:
          description: Password reset.
  /roles/rolePagination:
    get:
      security:
          - bearerAuth: []
      tags:
        - roles
      summary: Role Pagination.
      operationId: rolePagination
      parameters:
        - name: pageNumber
          in: query
          description: 'Current page.'
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Size of a page.'
          schema:
            type: string
        - name: search
          in: query
          description: 'Search values.'
          schema:
            type: string    
        - name: isSortedByName
          in: query
          description: 'Sorted by first name.'
          schema:
            type: array
            items:
              type: string
              default: asc
              enum:
              - asc 
              - desc
  /roles/createRoleWithPermissions:
    post:
      security:
        - bearerAuth: []
      tags:
      - roles
      summary: Create role with permissions.
      operationId: createRoleWithPermissions
      requestBody:
        description: Create role with permissions.
        content:
          'application/json':
            schema:
              type: object
              properties:
                roleName:
                  type: string
components:
  schemas:
    loginUser:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    pagination:
      type: object
      properties:
        pageSize:
          type: number
          default: 5
        pageNumber:
          type: number  
          default: 1
        search:
          type: string
        sort:
          type: string
    paginationReceipt:
      type: object
      properties:
        pageSize:
          type: number
          default: 5
        pageNumber:
          type: number  
          default: 1
        search:
          type: string
        sort:
          type: string
        from:
          type: string
          default: "2000-01-01"
        to:
          type: string        
          default: "2100-01-01"
    Employer:
      type: object
      properties:
        empEmail:
          type: string
        empPassword:
          type: string  
        empTerm:
          type: boolean
          default: true
    Freelancer:
      type: object
      properties:
        flcEmail:
          type: string
        flcPassword:
          type: string  
        flcTerm:
          type: boolean
          default: true                                              
    User:
      type: object
      properties:
        email:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phoneNumber:
          type: string
        status:
          type: string
        avatar:
          type: string
      xml:
        name: User
    UserWitdId:
      type: object
      properties:
        id:
          type: string
        email:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phoneNumber:
          type: string
        status:
          type: string
        avatar:
          type: string
      xml:
        name: UserWithId    
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
    cookieAuth:
      type: apiKey
      in: cookie
      name: token